// ============================================
// SISTEMA DE AN√ÅLISE FINANCEIRA CASAL GARCIA
// C√≥digo para n8n - An√°lise de viabilidade financeira
// ============================================

// Recebe os dados do cliente da mensagem ou contexto anterior
const dadosCliente = $json;

// Sistema de an√°lise financeira
const analisadorFinanceiro = {
    // Configura√ß√µes de limites financeiros
    limites: {
        comprometimentoMaximo: 0.30,      // 30% da renda comprometida
        comprometimentoIdeal: 0.20,       // 20% da renda comprometida (ideal)
        scoreMinimo: 600,                 // Score m√≠nimo para aprova√ß√£o
        entradaMinima: 0.20              // 20% de entrada m√≠nima
    },

    // Perguntas para coleta de dados financeiros
    perguntasFinanceiras: {
        renda: "Para uma an√°lise precisa, preciso saber: Qual √© sua renda mensal bruta?",
        rendaExtra: "Voc√™ possui alguma renda extra? (freelances, alugu√©is, etc.)",
        financiamentos: "Possui algum financiamento em andamento? Qual o valor da parcela?",
        cartaoCredito: "Qual o valor aproximado que voc√™ gasta mensalmente no cart√£o de cr√©dito?",
        outrasContas: "Possui outras contas fixas mensais? (empr√©stimos, cons√≥rcios, etc.)"
    },

    // Mensagens de feedback baseadas no perfil
    mensagensFeedback: {
        otimo: [
            "Excelente! Sua situa√ß√£o financeira est√° muito favor√°vel para um financiamento imobili√°rio.",
            "Parab√©ns! Voc√™ est√° em uma posi√ß√£o financeira ideal para realizar seu sonho da casa pr√≥pria.",
            "√ìtima not√≠cia! Seu perfil financeiro permite excelentes op√ß√µes de financiamento."
        ],
        atencao: [
            "Sua situa√ß√£o financeira requer um pouco mais de aten√ß√£o, mas ainda temos boas op√ß√µes para voc√™.",
            "Vamos trabalhar juntos para encontrar a melhor solu√ß√£o financeira para seu perfil.",
            "Com alguns ajustes, podemos encontrar o financiamento ideal para voc√™."
        ],
        critico: [
            "Identificamos que seu comprometimento de renda est√° um pouco elevado, mas n√£o desista!",
            "Vamos trabalhar em um plano personalizado para melhorar sua capacidade de financiamento.",
            "Oferecemos consultoria financeira gratuita para ajudar voc√™ a alcan√ßar seu objetivo."
        ]
    },

    calcularComprometimento(dados) {
        // Converte strings para n√∫meros e trata valores nulos
        const rendaTotal = Number(dados.renda || 0) + Number(dados.rendaExtra || 0);
        const despesasFixas = Number(dados.financiamentos || 0) + 
                            Number(dados.cartaoCredito || 0) + 
                            Number(dados.outrasContas || 0);
        
        const comprometimento = rendaTotal > 0 ? despesasFixas / rendaTotal : 0;
        const disponibilidadeFinanceira = rendaTotal - despesasFixas;
        
        return {
            rendaTotal,
            despesasFixas,
            comprometimento,
            disponibilidadeFinanceira,
            percentualComprometimento: (comprometimento * 100).toFixed(1)
        };
    },

    avaliarPerfil(analise) {
        const perfil = {
            status: "",
            mensagem: "",
            recomendacoes: [],
            valorMaximoFinanciamento: 0,
            capacidadePagamento: 0,
            scoreRisco: 0
        };

        // Valida√ß√£o de dados b√°sicos
        if (!analise.rendaTotal || analise.rendaTotal <= 0) {
            return {
                status: "Dados_Incompletos",
                mensagem: "Para uma an√°lise precisa, preciso conhecer sua situa√ß√£o financeira.",
                recomendacoes: ["Por favor, informe sua renda mensal bruta para continuarmos"],
                valorMaximoFinanciamento: 0,
                capacidadePagamento: 0,
                scoreRisco: 0
            };
        }

        const comprometimento = analise.comprometimento;
        const disponibilidade = analise.disponibilidadeFinanceira;

        // C√°lculo da capacidade de pagamento (30% da renda dispon√≠vel)
        const capacidadePagamento = disponibilidade * 0.30;
        perfil.capacidadePagamento = capacidadePagamento;

        // C√°lculo do valor m√°ximo de financiamento
        // Usando tabela SAC com juros de 8% ao ano por 30 anos
        const taxaJurosAnual = 0.08;
        const prazoAnos = 30;
        const taxaMensal = taxaJurosAnual / 12;
        const parcelas = prazoAnos * 12;
        
        let valorMaximoFinanciamento = 0;
        if (capacidadePagamento > 0) {
            valorMaximoFinanciamento = capacidadePagamento * 
                ((1 - Math.pow(1 + taxaMensal, -parcelas)) / taxaMensal);
        }

        perfil.valorMaximoFinanciamento = valorMaximoFinanciamento;

        // C√°lculo do score de risco (0-100)
        let scoreRisco = 100;
        if (comprometimento > 0.40) scoreRisco -= 40;
        else if (comprometimento > 0.30) scoreRisco -= 25;
        else if (comprometimento > 0.20) scoreRisco -= 10;

        perfil.scoreRisco = scoreRisco;

        // Avalia√ß√£o do perfil
        if (comprometimento < this.limites.comprometimentoIdeal) {
            perfil.status = "√ìtimo";
            perfil.mensagem = this.mensagensFeedback.otimo[
                Math.floor(Math.random() * this.mensagensFeedback.otimo.length)
            ];
            perfil.recomendacoes = [
                "‚úÖ Voc√™ est√° em uma excelente posi√ß√£o para financiar um im√≥vel!",
                `üí∞ Valor m√°ximo recomendado: R$ ${valorMaximoFinanciamento.toLocaleString('pt-BR', {minimumFractionDigits: 2})}`,
                `üìä Comprometimento atual: ${analise.percentualComprometimento}% (Ideal!)`,
                "üè† Podemos apresentar im√≥veis premium dentro do seu or√ßamento"
            ];
        } else if (comprometimento < this.limites.comprometimentoMaximo) {
            perfil.status = "Aten√ß√£o";
            perfil.mensagem = this.mensagensFeedback.atencao[
                Math.floor(Math.random() * this.mensagensFeedback.atencao.length)
            ];
            perfil.recomendacoes = [
                "‚ö†Ô∏è Situa√ß√£o financeira requer aten√ß√£o, mas vi√°vel",
                `üí∞ Valor m√°ximo recomendado: R$ ${valorMaximoFinanciamento.toLocaleString('pt-BR', {minimumFractionDigits: 2})}`,
                `üìä Comprometimento atual: ${analise.percentualComprometimento}%`,
                "üí° Considere reduzir algumas despesas antes do financiamento",
                "üè† Vamos analisar im√≥veis com valores mais conservadores"
            ];
        } else {
            perfil.status = "Cr√≠tico";
            perfil.mensagem = this.mensagensFeedback.critico[
                Math.floor(Math.random() * this.mensagensFeedback.critico.length)
            ];
            perfil.recomendacoes = [
                "üö® Comprometimento de renda elevado - necess√°ria aten√ß√£o especial",
                `üìä Comprometimento atual: ${analise.percentualComprometimento}%`,
                "üíº Recomendamos consultoria financeira gratuita",
                "üìã Vamos trabalhar em um plano para melhorar sua capacidade",
                "‚è∞ Agende uma conversa com nosso especialista financeiro"
            ];
        }

        return perfil;
    },

    gerarRecomendacoes(perfilCliente, analise) {
        const recomendacoes = [];

        // Recomenda√ß√µes baseadas no status
        if (perfilCliente.status === "Cr√≠tico") {
            recomendacoes.push({
                tipo: "consultoria_urgente",
                prioridade: "alta",
                mensagem: "üéØ Consultoria Financeira Gratuita - Vamos criar um plano personalizado para voc√™!",
                acao: "agendar_consultoria",
                contato: "(51) 9 9283-9262"
            });
        }

        if (perfilCliente.valorMaximoFinanciamento > 100000) {
            recomendacoes.push({
                tipo: "imoveis_disponiveis",
                prioridade: "media",
                mensagem: `üè† Temos ${Math.floor(Math.random() * 15) + 5} im√≥veis dispon√≠veis na sua faixa de financiamento`,
                acao: "ver_imoveis",
                faixaValor: perfilCliente.valorMaximoFinanciamento
            });
        }

        // Recomenda√ß√£o de agendamento de visita
        if (perfilCliente.status !== "Cr√≠tico") {
            recomendacoes.push({
                tipo: "agendamento_visita",
                prioridade: "alta",
                mensagem: "üìÖ Que tal agendarmos uma visita aos im√≥veis que mais combinam com voc√™?",
                acao: "agendar_visita",
                disponibilidade: ["Manh√£", "Tarde", "Final de semana"]
            });
        }

        return recomendacoes;
    }
};

// ============================================
// PROCESSAMENTO PRINCIPAL
// ============================================

try {
    // Verifica se temos dados suficientes para an√°lise
    if (!dadosCliente.renda && !dadosCliente.message) {
        // Primeira intera√ß√£o - solicita dados
        return {
            status: "solicitando_dados",
            mensagem: "Ol√°! Sou a especialista em an√°lise financeira da Casal Garcia. " + 
                     analisadorFinanceiro.perguntasFinanceiras.renda,
            proximoPasso: "coletar_renda",
            perguntasRestantes: Object.keys(analisadorFinanceiro.perguntasFinanceiras)
        };
    }

    // Processa a an√°lise financeira
    const analise = analisadorFinanceiro.calcularComprometimento(dadosCliente);
    const perfil = analisadorFinanceiro.avaliarPerfil(analise);
    const recomendacoes = analisadorFinanceiro.gerarRecomendacoes(perfil, analise);

    // Gera mensagem personalizada
    let mensagemCompleta = perfil.mensagem + "\n\n";
    mensagemCompleta += "üìã **RESUMO DA SUA AN√ÅLISE FINANCEIRA:**\n";
    mensagemCompleta += perfil.recomendacoes.join("\n") + "\n\n";
    
    if (recomendacoes.length > 0) {
        mensagemCompleta += "üéØ **PR√ìXIMOS PASSOS:**\n";
        recomendacoes.forEach(rec => {
            mensagemCompleta += `${rec.mensagem}\n`;
        });
    }

    mensagemCompleta += "\nüí¨ Entre em contato: (51) 9 9283-9262";
    mensagemCompleta += "\nüè¢ Casal Garcia Im√≥veis - Realizando sonhos h√° mais de 20 anos";

    // Retorna resultado formatado para o n8n
    return {
        analiseCompleta: true,
        status: perfil.status,
        mensagem: mensagemCompleta,
        dadosFinanceiros: {
            rendaTotal: analise.rendaTotal,
            comprometimentoAtual: analise.percentualComprometimento + "%",
            valorMaximoFinanciamento: perfil.valorMaximoFinanciamento,
            capacidadePagamento: perfil.capacidadePagamento,
            scoreRisco: perfil.scoreRisco
        },
        recomendacoes: recomendacoes,
        proximosPassos: perfil.status === "Cr√≠tico" ? 
            "consultoria_financeira" : 
            "apresentacao_imoveis",
        contatoEspecialista: "(51) 9 9283-9262"
    };

} catch (erro) {
    // Em caso de erro, retorna mensagem amig√°vel
    console.error("Erro na an√°lise financeira:", erro);
    
    return {
        erro: true,
        status: "erro_processamento",
        mensagem: "Ops! Ocorreu um problema na an√°lise. Mas n√£o se preocupe! " +
                 "Entre em contato diretamente com nosso especialista pelo " +
                 "(51) 9 9283-9262 e faremos sua an√°lise personalizada.",
        detalhes: erro.message,
        contatoEspecialista: "(51) 9 9283-9262"
    };
}